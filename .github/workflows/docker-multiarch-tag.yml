name: Release
on:
  push:
    branches:
      - master


jobs:
  tag:
    name: Tag release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: mathieudutour/github-tag-action@v3
      id: tag_version
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: 'v'
    - name: share variables
      shell: bash
      run: |
        mkdir env
        echo ${{ steps.tag_version.outputs.new_version }} > env/new_version
        echo ${{ steps.tag_version.outputs.new_tag }} > env/new_tag
        echo ${{ steps.tag_version.outputs.previous_tag }} > env/previous_tag
    - uses: actions/upload-artifact@v1
      with:
        name: env
        path: env
  build-releases:
    strategy:
      matrix:
        arch: ['x86_64', 'armv7h', 'aarch64']
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    needs: [tag]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: env
      - name: Read info
        id: tags
        shell: bash
        run: |
          echo ::set-output name=VERSION::$(cat env/new_version)
      - name: Install dependencies
        run: sudo apt update -y && sudo apt install -y qemu qemu-user-static
      - name: Setup qemu-user-static
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build ${{ matrix.arch }} release
        run: |
          mkdir artifacts
          make docker-release ARCH=${{ matrix.arch }} VERSION=${{ steps.tags.outputs.version }}
          mv *.tar.gz artifacts
      - uses: actions/upload-artifact@master
        with:
          name: yay_${{ matrix.arch }}
          path: artifacts
  create_release:
    name: Create release from this build
    needs: [build-releases]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - uses: actions/download-artifact@v1
        with:
          name: env
      - name: Read info
        id: tags
        shell: bash
        run: |
          echo ::set-output name=VERSION::$(cat env/new_version)
          echo ::set-output name=TAG::$(cat env/new_tag)
          echo ::set-output name=PREV_TAG::$(cat env/previous_tag)
      - name: Set version
        id: changelog
        shell: bash
        run: echo "::set-output name=CHANGELOG::$(git log --pretty=format:'%s%n' --abbrev-commit ${{ steps.tags.outputs.prev_tag }}..)"
      - uses: actions/download-artifact@master
        with:
          name: yay_x86_64
      - uses: actions/download-artifact@master
        with:
          name: yay_armv7h
      - uses: actions/download-artifact@master
        with:
          name: yay_aarch64
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tags.outputs.tag }}
          release_name: ${{ steps.tags.outputs.tag }}
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload x86_64 asset
        id: upload-release-asset-x86_64
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yay_x86_64/yay_${{ steps.tags.outputs.version }}_x86_64.tar.gz
          asset_name: yay_${{ steps.tags.outputs.version }}_x86_64.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload armv7h asset
        id: upload-release-asset-armv7h
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yay_armv7h/yay_${{ steps.tags.outputs.version }}_armv7h.tar.gz
          asset_name: yay_${{ steps.tags.outputs.version }}_armv7h.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload aarch64 asset
        id: upload-release-asset-aarch64
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yay_aarch64/yay_${{ steps.tags.outputs.version }}_aarch64.tar.gz
          asset_name: yay_${{ steps.tags.outputs.version }}_aarch64.tar.gz
          asset_content_type: application/tar+gzip
